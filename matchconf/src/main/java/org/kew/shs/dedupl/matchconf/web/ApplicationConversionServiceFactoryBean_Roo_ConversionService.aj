// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.kew.shs.dedupl.matchconf.web;

import org.kew.shs.dedupl.matchconf.Configuration;
import org.kew.shs.dedupl.matchconf.Matcher;
import org.kew.shs.dedupl.matchconf.Reporter;
import org.kew.shs.dedupl.matchconf.Transformer;
import org.kew.shs.dedupl.matchconf.Wire;
import org.kew.shs.dedupl.matchconf.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Configuration, String> ApplicationConversionServiceFactoryBean.getConfigurationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.kew.shs.dedupl.matchconf.Configuration, java.lang.String>() {
            public String convert(Configuration configuration) {
                return new StringBuilder().append(configuration.getName()).append(' ').append(configuration.getWorkDirPath()).append(' ').append(configuration.getSourceFileName()).append(' ').append(configuration.getSourceFileEncoding()).toString();
            }
        };
    }
    
    public Converter<Long, Configuration> ApplicationConversionServiceFactoryBean.getIdToConfigurationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.kew.shs.dedupl.matchconf.Configuration>() {
            public org.kew.shs.dedupl.matchconf.Configuration convert(java.lang.Long id) {
                return Configuration.findConfiguration(id);
            }
        };
    }
    
    public Converter<String, Configuration> ApplicationConversionServiceFactoryBean.getStringToConfigurationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.kew.shs.dedupl.matchconf.Configuration>() {
            public org.kew.shs.dedupl.matchconf.Configuration convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Configuration.class);
            }
        };
    }
    
    public Converter<Matcher, String> ApplicationConversionServiceFactoryBean.getMatcherToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.kew.shs.dedupl.matchconf.Matcher, java.lang.String>() {
            public String convert(Matcher matcher) {
                return new StringBuilder().append(matcher.getName()).append(' ').append(matcher.getPackageName()).append(' ').append(matcher.getClassName()).append(' ').append(matcher.getParams()).toString();
            }
        };
    }
    
    public Converter<Long, Matcher> ApplicationConversionServiceFactoryBean.getIdToMatcherConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.kew.shs.dedupl.matchconf.Matcher>() {
            public org.kew.shs.dedupl.matchconf.Matcher convert(java.lang.Long id) {
                return Matcher.findMatcher(id);
            }
        };
    }
    
    public Converter<String, Matcher> ApplicationConversionServiceFactoryBean.getStringToMatcherConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.kew.shs.dedupl.matchconf.Matcher>() {
            public org.kew.shs.dedupl.matchconf.Matcher convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Matcher.class);
            }
        };
    }
    
    public Converter<Reporter, String> ApplicationConversionServiceFactoryBean.getReporterToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.kew.shs.dedupl.matchconf.Reporter, java.lang.String>() {
            public String convert(Reporter reporter) {
                return new StringBuilder().append(reporter.getName()).append(' ').append(reporter.getDelimiter()).append(' ').append(reporter.getIdDelimiter()).append(' ').append(reporter.getFileName()).toString();
            }
        };
    }
    
    public Converter<Long, Reporter> ApplicationConversionServiceFactoryBean.getIdToReporterConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.kew.shs.dedupl.matchconf.Reporter>() {
            public org.kew.shs.dedupl.matchconf.Reporter convert(java.lang.Long id) {
                return Reporter.findReporter(id);
            }
        };
    }
    
    public Converter<String, Reporter> ApplicationConversionServiceFactoryBean.getStringToReporterConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.kew.shs.dedupl.matchconf.Reporter>() {
            public org.kew.shs.dedupl.matchconf.Reporter convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Reporter.class);
            }
        };
    }
    
    public Converter<Transformer, String> ApplicationConversionServiceFactoryBean.getTransformerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.kew.shs.dedupl.matchconf.Transformer, java.lang.String>() {
            public String convert(Transformer transformer) {
                return new StringBuilder().append(transformer.getName()).append(' ').append(transformer.getPackageName()).append(' ').append(transformer.getClassName()).append(' ').append(transformer.getParams()).toString();
            }
        };
    }
    
    public Converter<Long, Transformer> ApplicationConversionServiceFactoryBean.getIdToTransformerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.kew.shs.dedupl.matchconf.Transformer>() {
            public org.kew.shs.dedupl.matchconf.Transformer convert(java.lang.Long id) {
                return Transformer.findTransformer(id);
            }
        };
    }
    
    public Converter<String, Transformer> ApplicationConversionServiceFactoryBean.getStringToTransformerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.kew.shs.dedupl.matchconf.Transformer>() {
            public org.kew.shs.dedupl.matchconf.Transformer convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Transformer.class);
            }
        };
    }
    
    public Converter<Wire, String> ApplicationConversionServiceFactoryBean.getWireToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.kew.shs.dedupl.matchconf.Wire, java.lang.String>() {
            public String convert(Wire wire) {
                return new StringBuilder().append(wire.getSourceColumnName()).append(' ').append(wire.getLookupColumnName()).toString();
            }
        };
    }
    
    public Converter<Long, Wire> ApplicationConversionServiceFactoryBean.getIdToWireConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.kew.shs.dedupl.matchconf.Wire>() {
            public org.kew.shs.dedupl.matchconf.Wire convert(java.lang.Long id) {
                return Wire.findWire(id);
            }
        };
    }
    
    public Converter<String, Wire> ApplicationConversionServiceFactoryBean.getStringToWireConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.kew.shs.dedupl.matchconf.Wire>() {
            public org.kew.shs.dedupl.matchconf.Wire convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Wire.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getConfigurationToStringConverter());
        registry.addConverter(getIdToConfigurationConverter());
        registry.addConverter(getStringToConfigurationConverter());
        registry.addConverter(getMatcherToStringConverter());
        registry.addConverter(getIdToMatcherConverter());
        registry.addConverter(getStringToMatcherConverter());
        registry.addConverter(getReporterToStringConverter());
        registry.addConverter(getIdToReporterConverter());
        registry.addConverter(getStringToReporterConverter());
        registry.addConverter(getTransformerToStringConverter());
        registry.addConverter(getIdToTransformerConverter());
        registry.addConverter(getStringToTransformerConverter());
        registry.addConverter(getWireToStringConverter());
        registry.addConverter(getIdToWireConverter());
        registry.addConverter(getStringToWireConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
