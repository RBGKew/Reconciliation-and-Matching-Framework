// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.kew.shs.dedupl.matchconf.web;

import org.kew.shs.dedupl.matchconf.Bot;
import org.kew.shs.dedupl.matchconf.Configuration;
import org.kew.shs.dedupl.matchconf.Wire;
import org.kew.shs.dedupl.matchconf.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Bot, String> ApplicationConversionServiceFactoryBean.getBotToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.kew.shs.dedupl.matchconf.Bot, java.lang.String>() {
            public String convert(Bot bot) {
                return new StringBuilder().append(bot.getName()).append(' ').append(bot.getPackageName()).append(' ').append(bot.getClassName()).append(' ').append(bot.getParams()).toString();
            }
        };
    }
    
    public Converter<Long, Bot> ApplicationConversionServiceFactoryBean.getIdToBotConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.kew.shs.dedupl.matchconf.Bot>() {
            public org.kew.shs.dedupl.matchconf.Bot convert(java.lang.Long id) {
                return Bot.findBot(id);
            }
        };
    }
    
    public Converter<String, Bot> ApplicationConversionServiceFactoryBean.getStringToBotConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.kew.shs.dedupl.matchconf.Bot>() {
            public org.kew.shs.dedupl.matchconf.Bot convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Bot.class);
            }
        };
    }
    
    public Converter<Configuration, String> ApplicationConversionServiceFactoryBean.getConfigurationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.kew.shs.dedupl.matchconf.Configuration, java.lang.String>() {
            public String convert(Configuration configuration) {
                return new StringBuilder().append(configuration.getName()).append(' ').append(configuration.getWorkDirPath()).append(' ').append(configuration.getInputFileName()).append(' ').append(configuration.getOutputFileNameExtension()).toString();
            }
        };
    }
    
    public Converter<Long, Configuration> ApplicationConversionServiceFactoryBean.getIdToConfigurationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.kew.shs.dedupl.matchconf.Configuration>() {
            public org.kew.shs.dedupl.matchconf.Configuration convert(java.lang.Long id) {
                return Configuration.findConfiguration(id);
            }
        };
    }
    
    public Converter<String, Configuration> ApplicationConversionServiceFactoryBean.getStringToConfigurationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.kew.shs.dedupl.matchconf.Configuration>() {
            public org.kew.shs.dedupl.matchconf.Configuration convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Configuration.class);
            }
        };
    }
    
    public Converter<Wire, String> ApplicationConversionServiceFactoryBean.getWireToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.kew.shs.dedupl.matchconf.Wire, java.lang.String>() {
            public String convert(Wire wire) {
                return new StringBuilder().append(wire.getColumnName()).append(' ').append(wire.getColumnIndex()).toString();
            }
        };
    }
    
    public Converter<Long, Wire> ApplicationConversionServiceFactoryBean.getIdToWireConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.kew.shs.dedupl.matchconf.Wire>() {
            public org.kew.shs.dedupl.matchconf.Wire convert(java.lang.Long id) {
                return Wire.findWire(id);
            }
        };
    }
    
    public Converter<String, Wire> ApplicationConversionServiceFactoryBean.getStringToWireConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.kew.shs.dedupl.matchconf.Wire>() {
            public org.kew.shs.dedupl.matchconf.Wire convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Wire.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getBotToStringConverter());
        registry.addConverter(getIdToBotConverter());
        registry.addConverter(getStringToBotConverter());
        registry.addConverter(getConfigurationToStringConverter());
        registry.addConverter(getIdToConfigurationConverter());
        registry.addConverter(getStringToConfigurationConverter());
        registry.addConverter(getWireToStringConverter());
        registry.addConverter(getIdToWireConverter());
        registry.addConverter(getStringToWireConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
