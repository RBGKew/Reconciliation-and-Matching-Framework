<div xmlns:jsp="http://java.sun.com/JSP/Page"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:spring="http://www.springframework.org/tags">
	<jsp:output omit-xml-declaration="yes"/>

	<c:set var="req" value="${pageContext.request}" />
	<c:set var="serverAndPort" value="${req.serverName}"/>
	<c:if test="${req.localPort != 80}">
		<c:set var="serverAndPort" value="${req.serverName}:${req.localPort}"/>
	</c:if>

	<spring:url var="reconciliationServiceUrl" value="/reconcile/${configName}" />
	<spring:url var="matchServiceUrl" value="/match/${configName}" />
	<spring:url var="fileMatchUrl" value="/filematch/${configName}" />

	<h1>
		Reconciliation Service <em>${configName}</em>
	</h1>

	<p>Reconciliation Service URL: <input tabindex="1" type="text" class="form-inline" style="border: none; width: 60%" value="http://${serverAndPort}${reconciliationServiceUrl}"/></p>

	<c:if test="${reconciliationConfiguration.description != null}">
		<h2 id="description"><a href="#description">Service description</a></h2>
		<p>${reconciliationConfiguration.description}</p>

		<c:if test="${total != null}">
			<p>Contains <span class="badge">${total}</span> records.</p>
		</c:if>
	</c:if>

	<h2 id="detail"><a href="#detail">Service detail</a></h2>

	<p>
		Queries sent as a single field are first split up into <em>Properties</em>.  Each property (both the query and the authoritative value)
		is transformed by every <em>Transformer</em> in turn.  The results are compared using the <em>Matchers</em>, on every property.
	</p>

	<table class="table table-bordered table-striped table-condensed">
		<thead>
			<tr>
				<th>Property</th>
				<th>Transformers</th>
				<th>Matcher</th>
			</tr>
		</thead>
		<tbody>
			<c:forEach var="property" items="${properties}">
				<tr>
					<td>${property}</td>
					<td>
						<ol id="${property}_transformers">
							<c:forEach var="t" items="${transformers[property]}">
								<li>
									<span title="${t.qualifiedName}">${t.name}</span>
									<ul>
										<c:forEach var="c" items="${t.configuration}">
											<li>${c}</li>
										</c:forEach>
									</ul>
								</li>
							</c:forEach>
						</ol>
					</td>
					<td id="${property}_matcher">
						<span title="${matchers[property].qualifiedName}">${matchers[property].name}</span>
						<ul>
							<c:forEach var="c" items="${matchers[property].configuration}">
								<li>${c}</li>
							</c:forEach>
						</ul>
					</td>
				</tr>
			</c:forEach>
		</tbody>
	</table>

	<h2 id="properties"><a href="#properties">Properties</a></h2>

	<p>The Reconciliation Service can determine these automatically, or they can be overridden in the OpenRefine interface.</p>

	<p>For the JSON web service these should be URL-encoded HTTP GET parameters.</p>

	<p>The CSV file uploaded must be in UTF-8 encoding, and must use these properties as header lines.</p>

	<ul>
		<li>id</li>
		<c:forEach var="property" items="${properties}">
			<li>${property}</li>
		</c:forEach>
	</ul>

	<h2 id="endpoints"><a href="#endpoints">Service endpoints</a></h2>

	<ul>
		<li><strong>Open Refine reconciliation service:</strong> <input type="text" class="form-inline" style="border: none; width: 60%" value="http://${serverAndPort}${reconciliationServiceUrl}"/></li>

		<li><strong>JSON web service:</strong> <input type="text" class="form-inline" style="border: none; width: 60%" value="http://${serverAndPort}${matchServiceUrl}"/></li>

		<li>
			<strong>CSV file upload:</strong> <form class="form-inline" method="post" action="${fileMatchUrl}" enctype="multipart/form-data">
				<!-- CSV file Button -->
				<input id="file" tabindex="2" name="file" class="form-control" type="file" />
				<span> </span>
				<select id="charset" tabindex="3" name="charset" class="form-control">
					<c:forEach var="charsetName" items="${charsetNames}">
						<c:if test="${charsetName eq 'UTF-8'}">
							<option value="${charsetName}" selected="selected">${charsetName}</option>
						</c:if>
						<c:if test="${charsetName ne 'UTF-8'}">
							<option style="display: block;" value="${charsetName}">${charsetName}</option><br/>
						</c:if>
					</c:forEach>
				</select>
				<span> </span>
				<!-- Submit button -->
				<button tabindex="4" type="submit" class="btn btn-primary">Upload</button>
			</form>
		</li>
	</ul>

	<div id="singleQueryDiv" style="display: none">
		<h2 id="singlequery"><a href="#singlequery">Single query</a></h2>
		<p>Perform a single reconciliation query using this configuration, either with a single text string or split into properties:</p>

		<form id="singleQuery" class="form-horizontal">
			<div class="form-group">
				<label class="control-label" for="unatomized" style="width: 38%;">all-in-one</label> 
				<input id="unatomized" tabindex="5" name="unatomized" class="form-control form-inline" type="text" style="width: 56%;" />
			</div>

			<div id="atomizedProperties">
				<c:forEach var="property" items="${properties}">
					<div class="form-group">
						<label class="control-label" for="${property}" style="width: 38%;">${property}</label> 
						<input id="${property}" tabindex="6" name="${property}" class="form-control form-inline" type="text" style="width: 56%;" />
					</div>
				</c:forEach>
			</div>
			<!-- Submit button -->
			<div class="form-group">
				<label class="control-label" style="width: 38%;"> </label> 
				<button id="reset" tabindex="8" type="reset" class="btn">Reset</button>
				<label class="control-label" style="width: 38%;"> </label> 
				<button type="submit" tabindex="7" class="btn btn-primary">Query</button>
			</div>
		</form>
		<table id="singleQueryResultTable" class="table table-listing">
			<caption>Query results</caption>
		</table>

		<p>JSON request:</p>
		<pre id="singleQueryRequest" style="background-color: #f4f4f4; border: 1px solid #909090; margin: 1ex; padding: 1ex;"> </pre>

		<p>JSON response:</p>
		<pre id="singleQueryResult" style="background-color: #f4f4f4; border: 1px solid #909090; margin: 1ex; padding: 1ex;"> </pre>

		<script><![CDATA[
			var reconciliationServiceUrl = "${reconciliationServiceUrl}";
			var viewUrlPattern = "${reconciliationConfiguration.viewUrl}";

			$("#singleQuery").submit(function(event) {

				var properties;
				var query;
				var queryData;

				// If unatomized field is blank use atomized properties
				if ($.trim($("#unatomized").val()) == '') {
					query = "web1";
					properties = $("#atomizedProperties input").map(function() {
						return {"pid": this.id, "v": this.value};
					}).get();
					var queryData = {"query":query, "properties":properties};
				}
				else {
					query = $.trim($("#unatomized").val());
					var queryData = {"query":query};
				}

				$("#singleQueryRequest").html(JSON.stringify(queryData, null, 4));

				$.post(reconciliationServiceUrl, { query: JSON.stringify(queryData) }, function( data ) {
					$( "#singleQueryResult" ).html( JSON.stringify(data, null, 4) );

					var headers = "<caption>Query results</caption><thead><tr><th>id</th><th>name</th></tr></thead>";
					var body = "<tbody>" + jQuery.map(data.result, function(r, i) {
						var viewUrl = viewUrlPattern.replace("{{id}}", r.id);
						return "<tr><td><a href=\""+viewUrl+"\">"+r.id+"</a></td><td>"+r.name+"</td></tr>";
					}).join(" ") + "</tbody>";

					$("#singleQueryResultTable").html(headers+body);

				}, "json")
				.fail(function(jqXHR, textStatus, errorThrown) {
					$( "#singleQueryResult" ).html( "ERROR:\n" + jqXHR.responseText );
					console.log(jqXHR);
				});

				return false;
			});

			$("#singleQueryDiv").show();

			// Hide atomized fields if unatomized filled in and vice-versa.
			$("#unatomized").keyup(toggleFields);
			$("#atomizedProperties input").keyup(toggleFields);
			$("#singleQuery").on('reset', function() { setTimeout(toggleFields);});

			function toggleFields() {
				$("#atomizedProperties input").prop("disabled", $("#unatomized").val() != '');
				$("#unatomized").prop("disabled", $.grep($("#atomizedProperties input"), function(i) {
					return i.value != '';
				}).length > 0);
			}
		]]></script>
	</div>
</div>
