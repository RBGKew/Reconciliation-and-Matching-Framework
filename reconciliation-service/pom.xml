<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.kew.rmf</groupId>
		<artifactId>reconciliation-and-matching-framework</artifactId>
		<version>0.3.0</version>
	</parent>
	<artifactId>reconciliation-service</artifactId>
	<packaging>war</packaging>

	<name>Reconciliation Service</name>
	<description>
		Implementation of an OpenRefine Reconciliation Service, exposing premade RMF configurations.
	</description>

	<properties>
		<commons-dbcp.version>2.0.1</commons-dbcp.version>
		<kew-website-templates.version>0.1.0</kew-website-templates.version>
		<mysql.version>5.1.31</mysql.version>
		<postgresql.version>9.3-1100-jdbc41</postgresql.version>
		<tiles.version>2.2.2</tiles.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.kew.rmf</groupId>
			<artifactId>rmf-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.kew.rmf</groupId>
			<artifactId>reconciliation-service-model</artifactId>
		</dependency>

		<dependency>
			<groupId>org.gbif</groupId>
			<artifactId>name-parser</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>

		<dependency>
			<groupId> org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp.jstl</groupId>
			<artifactId>jstl-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>jstl-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.kew.web</groupId>
			<artifactId>kew-website-templates-model</artifactId>
			<version>${kew-website-templates.version}</version>
		</dependency>
		<dependency>
			<groupId>org.kew.web</groupId>
			<artifactId>kew-website-templates-war</artifactId>
			<version>${kew-website-templates.version}</version>
			<type>war</type>
		</dependency>

		<!-- file upload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>

		<!-- tiles stuff -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-core</artifactId>
			<version>${tiles.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>${tiles.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-api</artifactId>
			<version>${tiles.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-servlet</artifactId>
			<version>${tiles.version}</version>
		</dependency>	
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-template</artifactId>
			<version>${tiles.version}</version>
		</dependency>	
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-el</artifactId>
			<version>${tiles.version}</version>
		</dependency>

		<!-- logging stuff -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.kew.logback</groupId>
			<artifactId>logback-evaluators</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- Perf4J â€” needs aspect support -->
		<dependency>
			<groupId>org.perf4j</groupId>
			<artifactId>perf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-jexl</groupId>
			<artifactId>commons-jexl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Reading records from databases -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>${commons-dbcp.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>

		<!-- for testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-spring</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.skyscreamer</groupId>
			<artifactId>jsonassert</artifactId>
			<version>1.2.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>reconciliation-service</finalName>

		<plugins>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.2.2.v20140723</version>
				<configuration>
					<webAppConfig>
						<!-- Jetty adds the WAR overlay itself, and has no way to exclude it. -->
						<allowDuplicateFragmentNames>true</allowDuplicateFragmentNames>
					</webAppConfig>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.6.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp</directory>
							<includes>
								<include>WEB-INF/classes/</include>
								<include>WEB-INF/kew-layouts/</include>
								<include>WEB-INF/lib/</include>
								<include>WEB-INF/tags/</include>
								<include>kewtheme/</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<packagingExcludes>
						WEB-INF/classes/logback.xml,
						WEB-INF/classes/META-INF/spring/reconciliation-service.properties
					</packagingExcludes>
				</configuration>
				<executions>
					<execution>
						<!--
							Without adding the web templates in-place (in src/main/webapp) the tiles layouts aren't picked up
							when running tests (using Maven).  Entries in .gitignore exclude the files from source control.
						-->
						<id>war-inplace</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>inplace</goal>
						</goals>
						<configuration>
							<overlays>
								<overlay />
								<overlay>
									<groupId>org.kew.web</groupId>
									<artifactId>kew-website-templates-war</artifactId>
									<excludes>
										<exclude>META-INF/</exclude>
										<exclude>WEB-INF/lib/*.jar</exclude>
									</excludes>
								</overlay>
							</overlays>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<!-- Propagate arguments when doing a release (necessary for tests using the database) -->
					<arguments>-Dipni.database.password=${ipni.database.password} -Dipniflat.database.password=${ipniflat.database.password} -Dtpl.database.password=${tpl.database.password}</arguments>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>devel</id>
			<activation>
				<property>
					<name>environment</name>
					<value>devel</value>
				</property>
			</activation>
			<!-- Local development target -->
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>1.2.0</version>
						<configuration>
							<container>
								<containerId>tomcat7x</containerId>
								<type>remote</type>
							</container>
							<configuration>
								<type>runtime</type>
								<properties>
									<cargo.hostname>localhost</cargo.hostname>
									<cargo.servlet.port>18080</cargo.servlet.port>
									<cargo.remote.username>admin</cargo.remote.username>
									<cargo.remote.password>letmein</cargo.remote.password>
								</properties>
							</configuration>
						</configuration>
					</plugin>
					<!--plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin-->
				</plugins>
			</build>
		</profile>

		<profile>
			<id>ci</id>
			<activation>
				<property>
					<name>environment</name>
					<value>ci</value>
				</property>
			</activation>
			<!-- Continuous Integration target -->
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>1.2.0</version>
						<configuration>
							<container>
								<containerId>tomcat7x</containerId>
								<type>remote</type>
							</container>
							<configuration>
								<type>runtime</type>
								<properties>
									<cargo.hostname>kpttapp01.ad.kew.org</cargo.hostname>
									<cargo.servlet.port>8080</cargo.servlet.port>
									<cargo.remote.username>sadmin</cargo.remote.username>
									<cargo.remote.password>kewadmin</cargo.remote.password>
								</properties>
							</configuration>
						</configuration>
					</plugin>
					<!--plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin-->
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
